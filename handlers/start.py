from aiogram import types, Dispatcher

async def cmd_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["–ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", "–ó–≤'—è–∑–∞—Ç–∏—Å—è", "FAQ", "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞"]
    keyboard.add(*buttons)
    
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! üëã\n–Ø ‚Äî AI Assistant –¥–ª—è –±—ñ–∑–Ω–µ—Å—É. –ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?", reply_markup=keyboard)

def register_start_handlers(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands=["start"])


async def contact_info(message: types.Message):
    text = (
        "üìû –ó–≤‚Äô—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏:\n"
        "Telegram: @your_username\n"
        "Instagram: https://instagram.com/your_account\n"
        "Email: support@example.com"
    )
    await message.reply(text)

def register_start_handlers(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands=["start"])
    dp.register_message_handler(contact_info, lambda msg: msg.text == "–ó–≤'—è–∑–∞—Ç–∏—Å—è")

async def faq_info(message: types.Message):
    text = (
        "‚ùì *–ß–∞—Å—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è:*\n"
        "‚Ä¢ –Ø–∫ –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?\n"
        "  ‚Üí –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è' —Ç–∞ –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É.\n"
        "‚Ä¢ –°–∫—ñ–ª—å–∫–∏ —á–∞—Å—É —á–µ–∫–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å?\n"
        "  ‚Üí –ó–∞–∑–≤–∏—á–∞–π –ø—Ä–æ—Ç—è–≥–æ–º 1-2 –≥–æ–¥–∏–Ω —É —Ä–æ–±–æ—á–∏–π —á–∞—Å.\n"
        "‚Ä¢ –Ø–∫ –∑–º—ñ–Ω–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?\n"
        "  ‚Üí –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º –Ω–∞–ø—Ä—è–º—É —á–µ—Ä–µ–∑ '–ó–≤'—è–∑–∞—Ç–∏—Å—è'."
    )
    await message.reply(text, parse_mode='Markdown')

async def support_info(message: types.Message):
    await message.reply("üîß –î–ª—è —Ç–µ—Ö–Ω—ñ—á–Ω–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º —É Telegram @your_support –∞–±–æ –Ω–∞ email support@example.com")

def register_start_handlers(dp: Dispatcher):
    ...
    dp.register_message_handler(faq_info, lambda msg: msg.text == "FAQ")
    dp.register_message_handler(support_info, lambda msg: msg.text == "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞")